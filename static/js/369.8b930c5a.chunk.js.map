{"version":3,"file":"static/js/369.8b930c5a.chunk.js","mappings":"2NACA,EAA8B,6B,2BCW9B,EARqB,SAAAA,GACnB,OAAOC,EAAAA,EAAAA,IAAA,6CAEmCD,EAFnC,4BAHO,qCAOXE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACjB,E,SCkCD,EAvCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAEHC,EAAaT,GAFV,OAEhBD,EAFgB,OAGtBK,EAAWL,EAAKW,SAHM,gDAKtBJ,EAAS,iCALa,yDAAH,qDAQvBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,IACI,IAAnBF,EAAQQ,QACP,yCAEA,eAAIC,UAAWC,EAAf,SACGV,EAAQW,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,QAKV,C,sBC1CD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOvB,GAEP,YADAiB,EAAOjB,EAET,CACIsB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO/B,KAAK0B,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","services/fetchReveiws.js","components/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\"};","import axios from 'axios';\n\nconst API_KEY = '77cc72e96f7fab7310e90a268c6bf448';\n\nconst fetchReveiws = movie_id => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=${API_KEY}`\n    )\n    .then(response => response.data);\n};\n\nexport default fetchReveiws;\n","import css from './Reviews.module.css';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchReveiws from 'services/fetchReveiws';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setreveiws] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieReveiws = async () => {\n      try {\n        const data = await fetchReveiws(movieId);\n        setreveiws(data.results);\n      } catch (error) {\n        setError('Oops. Something went wrong...');\n      }\n    };\n    fetchMovieReveiws();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {reviews.length === 0 ? (\n        <div>No reviews</div>\n      ) : (\n        <ul className={css.reviewsList}>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <p>Author: {review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["movie_id","axios","then","response","data","movieId","useParams","useState","reviews","setreveiws","error","setError","useEffect","fetchMovieReveiws","fetchReveiws","results","length","className","css","map","review","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}