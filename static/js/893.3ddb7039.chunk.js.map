{"version":3,"file":"static/js/893.3ddb7039.chunk.js","mappings":"2NACA,EAA2B,uBAA3B,EAA6D,uB,oCCS7D,EANkB,SAAAA,GAChB,OAAOC,EAAAA,EAAAA,IAAA,6CACsCD,EADtC,4BAHO,qCAKXE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,GACjB,E,SC8CD,EAhDa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,oGAEtBF,GAAiB,GAFK,SAGJG,EAAUX,GAHN,OAGhBY,EAHgB,OAItBR,EAAQQ,EAAIT,MAJU,gDAMtBG,EAAS,iCANa,yBAQtBE,GAAiB,GARK,4EAAH,qDAWvBE,GACD,GAAE,CAACV,KAGF,gCACGO,IAAiB,wCACjBF,IAAS,yBAAMA,KAChB,eAAIQ,UAAWC,EAAf,SACGX,EAAKY,KAAI,SAAAC,GAAQ,OAChB,gBAAsBH,UAAWC,EAAjC,UACGE,EAASC,cACR,gBACEC,IAAG,yCAAoCF,EAASC,cAChDE,IAAG,UAAKH,EAASI,KAAd,gBAGL,gBAAKF,IAAKG,EAAKC,MAAM,MAAMC,OAAO,MAAMJ,IAAI,oBAE9C,4BACE,uBAAIH,EAASI,QACb,uBAAIJ,EAASQ,iBAXRR,EAASrB,GADF,QAmBzB,C,kHCpDD,SAAS8B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAO7B,GAEP,YADAuB,EAAOvB,EAET,CACI4B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOrC,KAAKgC,EAAOC,EAEvC,CACe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GACzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CACAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","services/fetchCast.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\"};","import axios from 'axios';\n\nconst API_KEY = '77cc72e96f7fab7310e90a268c6bf448';\n\nconst fetchCast = id => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n    .then(response => response.data);\n};\n\nexport default fetchCast;\n","import css from './Cast.module.css';\nimport img from 'images/image-not-found.jpeg';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport fetchCast from 'services/fetchCast';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaderShown, setIsLoaderShown] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieCredits = async () => {\n      try {\n        setIsLoaderShown(true);\n        const res = await fetchCast(movieId);\n        setCast(res.cast);\n      } catch (error) {\n        setError('Oops. Something went wrong...');\n      } finally {\n        setIsLoaderShown(false);\n      }\n    };\n    fetchMovieCredits();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoaderShown && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      <ul className={css.castList}>\n        {cast.map(castItem => (\n          <li key={castItem.id} className={css.castItem}>\n            {castItem.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${castItem.profile_path}`}\n                alt={`${castItem.name} portrait`}\n              />\n            ) : (\n              <img src={img} width=\"200\" height=\"300\" alt=\"File not found\" />\n            )}\n            <div>\n              <p>{castItem.name}</p>\n              <p>{castItem.character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"names":["id","axios","then","response","data","movieId","useParams","useState","cast","setCast","error","setError","isLoaderShown","setIsLoaderShown","useEffect","fetchMovieCredits","fetchCast","res","className","css","map","castItem","profile_path","src","alt","name","img","width","height","character","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}